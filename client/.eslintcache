[{"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js":"1","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js":"2","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js":"3","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js":"4","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js":"5","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\mobileChatBox.js":"6","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js":"7","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js":"8","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js":"9","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\index.js":"10","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js":"11","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js":"12","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js":"13","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\Feed.js":"14","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js":"15","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js":"16","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js":"17","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js":"18","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js":"19","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\index.js":"20","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\AddPet.js":"21"},{"size":230,"mtime":1675194465513,"results":"22","hashOfConfig":"23"},{"size":1417,"mtime":1675370585852,"results":"24","hashOfConfig":"23"},{"size":4741,"mtime":1675294674394,"results":"25","hashOfConfig":"23"},{"size":8774,"mtime":1675361512463,"results":"26","hashOfConfig":"23"},{"size":525,"mtime":1675194465518,"results":"27","hashOfConfig":"23"},{"size":5434,"mtime":1675361512464,"results":"28","hashOfConfig":"23"},{"size":40,"mtime":1675194465515,"results":"29","hashOfConfig":"23"},{"size":38,"mtime":1675194465514,"results":"30","hashOfConfig":"23"},{"size":45,"mtime":1675194465517,"results":"31","hashOfConfig":"23"},{"size":32,"mtime":1675280581851,"results":"32","hashOfConfig":"23"},{"size":976,"mtime":1675280581853,"results":"33","hashOfConfig":"23"},{"size":690,"mtime":1675194465514,"results":"34","hashOfConfig":"23"},{"size":3643,"mtime":1675375461450,"results":"35","hashOfConfig":"23"},{"size":5357,"mtime":1675294674395,"results":"36","hashOfConfig":"23"},{"size":39,"mtime":1675194465515,"results":"37","hashOfConfig":"23"},{"size":3197,"mtime":1675194465514,"results":"38","hashOfConfig":"23"},{"size":1557,"mtime":1675294674397,"results":"39","hashOfConfig":"23"},{"size":42,"mtime":1675194465518,"results":"40","hashOfConfig":"23"},{"size":4241,"mtime":1675367404477,"results":"41","hashOfConfig":"23"},{"size":34,"mtime":1675367404476,"results":"42","hashOfConfig":"23"},{"size":4396,"mtime":1675367404476,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"16qcfwd",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js",[],["92","93"],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js",["94"],"import * as React from 'react';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Modal, Typography, Box, Grid, TextField, Backdrop, Avatar, Stack, Button } from '@mui/material';\r\nimport BasicTabs from './mobileChatBox'\r\n\r\nimport io from 'socket.io-client'\r\nconst socket = io.connect('http://localhost:3001');\r\n\r\n// Colored avatars with initials\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    let color = '#';\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\r\n    };\r\n}\r\n\r\nfunction ChatBox() {\r\n    // Show chat box modal use state\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const userMessageStyle = {\r\n        color: \"white\",\r\n        lineHeight: \"1.5\",\r\n        backgroundColor: \"primary.main\",\r\n        m: \"10px 10px 20px 10px\",\r\n        p: \"5px 20px\",\r\n        borderRadius: \"16px 16px 0 16px\",\r\n        maxWidth: \"40%\",\r\n        overflowWrap: \"break-word\",\r\n    }\r\n\r\n    const friendMessageStyle = {\r\n        color: \"black\",\r\n        lineHeight: \"1.5\",\r\n        backgroundColor: \"grey.400\",\r\n        m: \"10px 10px 20px 10px\",\r\n        p: \"5px 20px\",\r\n        borderRadius: \"16px 16px 16px 0px\",\r\n        maxWidth: \"40%\",\r\n        overflowWrap: \"break-word\"\r\n    }\r\n\r\n    const [message, setMessage] = React.useState('');\r\n    const [messageReceived, setMessageReceived] = React.useState([]);\r\n\r\n    const sendMessage = () => {\r\n        if (message === '') {\r\n            return\r\n        }\r\n        socket.emit(\"sendMessage\", { message });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        socket.on(\"receiveMessage\", (data) => {\r\n            setMessageReceived(data);\r\n            setMessage('')\r\n        })\r\n    }, [socket])\r\n\r\n    function ChatBubble(props) {\r\n        return (\r\n            <Grid container justifyContent=\"flex-end\">\r\n                <Typography variant=\"h6\" component=\"div\"\r\n                    sx={userMessageStyle}>\r\n                    {props.message}\r\n                </Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ForumIcon\r\n                sx={{\r\n                    position: \"fixed\",\r\n                    zIndex: 50,\r\n                    right: \"3%\",\r\n                    bottom: \"3%\",\r\n                    width: 40,\r\n                    height: 40,\r\n                    \"&:hover\": {\r\n                        cursor: \"pointer\"\r\n                    }\r\n                }}\r\n                onClick={handleOpen}\r\n            />\r\n            <Backdrop sx={{ color: '#fff', zIndex: 10 }}\r\n                open={open}\r\n            >\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"modal-modal-title\"\r\n                    aria-describedby=\"modal-modal-description\"\r\n                    sx={{ height: \"100vh\" }}\r\n                >\r\n                    <Box sx={{\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        width: \"70%\",\r\n                        height: \"70%\",\r\n                        bgcolor: 'background.paper',\r\n                        boxShadow: 24,\r\n                        p: 2,\r\n                        borderRadius: 5\r\n                    }}>\r\n                        {/* Medium screen breakpoint chat layout */}\r\n                        <Grid container sx={{ height: \"100%\", display: { xs: \"none\", md: \"flex\" } }}>\r\n                            <Grid item sm={3} sx={{\r\n                                borderRight: \"2px solid #E4E4E4\",\r\n                                p: \"0 16px 0 0\"\r\n                            }}>\r\n                                <Typography variant=\"h6\" component=\"h2\" sx={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n                                    Chats\r\n                                </Typography>\r\n                                {/* TODO: Map over chats */}\r\n                                <Stack direction=\"row\" spacing={2} sx={{ borderTop: \"2px solid #E4E4E4\", p: \"5px\", \"&:hover\": { cursor: \"pointer\" } }}>\r\n                                    <Avatar {...stringAvatar('John Doe')} />\r\n                                    <Grid container alignItems=\"center\">\r\n                                        <Typography sx={{ lineHeight: \"1\", fontSize: \"14px\" }}>Last message from John Doe.</Typography>\r\n                                    </Grid>\r\n                                </Stack>\r\n                                <Stack direction=\"row\" spacing={2} sx={{ borderTop: \"2px solid #E4E4E4\", p: \"5px\", \"&:hover\": { cursor: \"pointer\" } }}>\r\n                                    <Avatar {...stringAvatar('Tim Doe')} />\r\n                                    <Grid container alignItems=\"center\">\r\n                                        <Typography sx={{ lineHeight: \"1\", fontSize: \"14px\" }}>Last message from Tim Doe.</Typography>\r\n                                    </Grid>\r\n                                </Stack>\r\n                            </Grid>\r\n                            <Grid item sm={9} sx={{\r\n                                p: \"0 0 0 16px\",\r\n                                height: \"100%\"\r\n                            }}>\r\n                                <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ height: \"100%\", flexWrap: \"nowrap\" }}>\r\n                                    <Grid item sx={{ overflow: \"auto\" }} id=\"messageField\">\r\n                                        {messageReceived.map((data) => <ChatBubble key={data.message} socketID={data.socketID} message={data.message} />)}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Box component=\"form\"\r\n                                            onSubmit={(event) => {\r\n                                                event.preventDefault();\r\n                                                sendMessage()\r\n                                            }}\r\n                                        >\r\n                                            <Grid container justifyContent=\"center\" gap={1}>\r\n                                                <Grid item xs>\r\n                                                    <TextField fullWidth size='small' placeholder='Your message here...' id=\"textfield\" value={message}\r\n                                                        onChange={(event) => {\r\n                                                            setMessage(event.target.value)\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: 1 }}>\r\n                                                        <Button variant=\"contained\" endIcon={<SendIcon />} type='submit'>\r\n                                                            Send\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {/* Small screen breakpoint chat layout */}\r\n                        <Grid container sx={{ height: \"100%\", display: { xs: \"flex\", md: \"none\" } }}>\r\n                            <BasicTabs\r\n                                stringAvatar={stringAvatar}\r\n                                friendMessageStyle={friendMessageStyle}\r\n                                userMessageStyle={userMessageStyle}\r\n                            />\r\n                        </Grid>\r\n                    </Box>\r\n                </Modal >\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatBox;","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js",["95"],"import decode from \"jwt-decode\";\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token ? true : false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"auth_token\");\r\n  }\r\n\r\n  login(token) {\r\n    localStorage.setItem(\"auth_token\", token);\r\n    window.location.assign(\"/\");\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"auth_token\");\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n ","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\mobileChatBox.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js",["96"],"import React, { useState, useEffect } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport { Button } from \"@mui/material\";\r\nimport auth from \"../../utils/auth.js\";\r\n\r\nconst LOGOUT = gql`\r\n  mutation Logout {\r\n    logout\r\n  }\r\n`;\r\n\r\nfunction LogoutForm() {\r\n  const [logout, { data }] = useMutation(LOGOUT);\r\n  const [isLoggedOut, setIsLoggedOut] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tauth.logout();\r\n\t\t\tsetIsLoggedOut(true);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await logout();\r\n  };\r\n\r\n  if (isLoggedOut) {\r\n    return <p>You have successfully logged out.</p>;\r\n  }\r\n\r\n\treturn (\r\n\t\t<Button variant=\"outlined\"\r\n\t\t\tsx={{\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t\tborderColor: \"white\",\r\n\t\t\t\tml: \"20px\",\r\n\t\t\t\t\"&:hover\": {\r\n\t\t\t\t\tcolor: \"#DE4567\",\r\n\t\t\t\t\tborderColor: \"#DE4567\",\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\t\r\n\t\t>\r\n\t\t\tLogout\r\n\t\t</Button>\r\n\t);\r\n}\r\n\r\nexport default LogoutForm;\r\n","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js",["97","98","99","100","101","102"],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\Feed.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js",["103","104"],"import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../../utils/mutations\";\r\nimport { Grid, Box, Avatar, Typography, TextField, Button, Link, Paper } from '@mui/material';\r\nimport PetsIcon from '@mui/icons-material/Pets';\r\n\r\n\r\nimport Auth from \"../../utils/auth.js\";\r\nimport Register from '../Register';\r\n\r\nfunction Login() {\r\n  const [formState, setFormState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await Login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Show sign up modal use state\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square\r\n        sx={{\r\n          backgroundColor: '#F8F5F2'\r\n        }}>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            backgroundColor: '#F8F5F2'\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: '#DE4567' }}>\r\n            <PetsIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            LOG IN\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={formState.email}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={formState.password}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, backgroundColor: '#405C96' }}\r\n            >\r\n              LOG IN\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link onClick={handleOpen} variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <Register handleClose={handleClose} open={open} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js",["105","106"],"import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REGISTER_USER } from \"../../utils/mutations\";\r\nimport { Modal, Box, Typography, Grid, TextField, Button } from \"@mui/material\";\r\n\r\nimport Auth from \"../../utils/auth.js\";\r\n\r\nfunction Register(props) {\r\n  const [formState, setFormState] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    location: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [register, { error, data }] = useMutation(REGISTER_USER);\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await register({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data);\r\n      Auth.login(data.register.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    // Sign up modal\r\n    <Modal\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={{\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        \"@media (max-width: 600px)\": {\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          width: '70%',\r\n          bgcolor: 'background.paper',\r\n          boxShadow: 24,\r\n          p: 4,\r\n        }\r\n      }}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"given-name\"\r\n                name=\"first_name\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                value={formState.first_name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"last_name\"\r\n                autoComplete=\"family-name\"\r\n                value={formState.last_name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                name=\"location\"\r\n                autoComplete=\"location\"\r\n                value={formState.location}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={formState.email}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"new-password\"\r\n                value={formState.password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2, backgroundColor: '#405C96' }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\AddPet.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":79,"column":8,"nodeType":"113","endLine":79,"endColumn":16,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":28,"column":1,"nodeType":"117","endLine":28,"endColumn":34},{"ruleId":"118","severity":1,"message":"119","line":24,"column":9,"nodeType":"120","messageId":"121","endLine":24,"endColumn":21},{"ruleId":"118","severity":1,"message":"122","line":4,"column":8,"nodeType":"120","messageId":"121","endLine":4,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":72,"column":27,"nodeType":"125","endLine":72,"endColumn":110},{"ruleId":"123","severity":1,"message":"124","line":75,"column":27,"nodeType":"125","endLine":75,"endColumn":110},{"ruleId":"123","severity":1,"message":"124","line":78,"column":27,"nodeType":"125","endLine":78,"endColumn":110},{"ruleId":"123","severity":1,"message":"124","line":81,"column":27,"nodeType":"125","endLine":81,"endColumn":115},{"ruleId":"123","severity":1,"message":"124","line":86,"column":23,"nodeType":"125","endLine":86,"endColumn":106},{"ruleId":"118","severity":1,"message":"126","line":18,"column":19,"nodeType":"120","messageId":"121","endLine":18,"endColumn":24},{"ruleId":"118","severity":1,"message":"127","line":18,"column":26,"nodeType":"120","messageId":"121","endLine":18,"endColumn":30},{"ruleId":"118","severity":1,"message":"126","line":18,"column":22,"nodeType":"120","messageId":"121","endLine":18,"endColumn":27},{"ruleId":"118","severity":1,"message":"127","line":18,"column":29,"nodeType":"120","messageId":"121","endLine":18,"endColumn":33},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["130"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'handleSubmit' is assigned a value but never used.","Identifier","unusedVar","'Typography' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: []",{"range":"133","text":"134"},[2250,2258],"[]"]
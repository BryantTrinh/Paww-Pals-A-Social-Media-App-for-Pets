[{"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js":"1","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js":"2","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js":"3","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js":"4","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\mobileChatBox.js":"5","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js":"6","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js":"7","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js":"8","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\index.js":"9","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\index.js":"10","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js":"11","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js":"12","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js":"13","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js":"14","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\Feed.js":"15","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\AddPet.js":"16","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\queries.js":"17","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js":"18","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js":"19","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\index.js":"20","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\Match.js":"21","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js":"22","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js":"23","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js":"24"},{"size":219,"mtime":1675115792555,"results":"25","hashOfConfig":"26"},{"size":1361,"mtime":1675446706821,"results":"27","hashOfConfig":"26"},{"size":4741,"mtime":1675284657373,"results":"28","hashOfConfig":"26"},{"size":9090,"mtime":1675449395548,"results":"29","hashOfConfig":"26"},{"size":5434,"mtime":1675303239442,"results":"30","hashOfConfig":"26"},{"size":39,"mtime":1675125975395,"results":"31","hashOfConfig":"26"},{"size":504,"mtime":1675371071623,"results":"32","hashOfConfig":"26"},{"size":37,"mtime":1675112157206,"results":"33","hashOfConfig":"26"},{"size":32,"mtime":1675277546125,"results":"34","hashOfConfig":"26"},{"size":34,"mtime":1675361878286,"results":"35","hashOfConfig":"26"},{"size":42,"mtime":1675194437731,"results":"36","hashOfConfig":"26"},{"size":663,"mtime":1675189141344,"results":"37","hashOfConfig":"26"},{"size":2671,"mtime":1675297447110,"results":"38","hashOfConfig":"26"},{"size":1054,"mtime":1675371071620,"results":"39","hashOfConfig":"26"},{"size":2871,"mtime":1675454643776,"results":"40","hashOfConfig":"26"},{"size":4371,"mtime":1675458748760,"results":"41","hashOfConfig":"26"},{"size":869,"mtime":1675450887861,"results":"42","hashOfConfig":"26"},{"size":38,"mtime":1675112157206,"results":"43","hashOfConfig":"26"},{"size":3262,"mtime":1675371071619,"results":"44","hashOfConfig":"26"},{"size":38,"mtime":1675189199380,"results":"45","hashOfConfig":"26"},{"size":2323,"mtime":1675451470970,"results":"46","hashOfConfig":"26"},{"size":2351,"mtime":1675450360632,"results":"47","hashOfConfig":"26"},{"size":41,"mtime":1675112157207,"results":"48","hashOfConfig":"26"},{"size":4124,"mtime":1675373369452,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pzswbn",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"52"},"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js",[],["106","107"],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js",["108","109"],"import * as React from 'react';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Modal, Typography, Box, Grid, TextField, Backdrop, Avatar, Stack, Button } from '@mui/material';\r\nimport BasicTabs from './mobileChatBox'\r\n\r\nimport auth from '../utils/auth'\r\n\r\nimport io from 'socket.io-client'\r\nconst socket = io.connect('http://localhost:3001');\r\n\r\n// Colored avatars with initials\r\nfunction stringToColor(string) {\r\n    let hash = 0;\r\n    let i;\r\n    for (i = 0; i < string.length; i += 1) {\r\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n    let color = '#';\r\n    for (i = 0; i < 3; i += 1) {\r\n        const value = (hash >> (i * 8)) & 0xff;\r\n        color += `00${value.toString(16)}`.slice(-2);\r\n    }\r\n    return color;\r\n}\r\n\r\nfunction stringAvatar(name) {\r\n    return {\r\n        sx: {\r\n            bgcolor: stringToColor(name),\r\n        },\r\n        children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\r\n    };\r\n}\r\n\r\nfunction ChatBox() {\r\n    // Show chat box modal use state\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n        joinRoom()\r\n    };\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const userMessageStyle = {\r\n        color: \"white\",\r\n        lineHeight: \"1.5\",\r\n        backgroundColor: \"primary.main\",\r\n        m: \"10px 10px 20px 10px\",\r\n        p: \"5px 20px\",\r\n        borderRadius: \"16px 16px 0 16px\",\r\n        maxWidth: \"40%\",\r\n        overflowWrap: \"break-word\",\r\n    }\r\n\r\n    const friendMessageStyle = {\r\n        color: \"black\",\r\n        lineHeight: \"1.5\",\r\n        backgroundColor: \"grey.400\",\r\n        m: \"10px 10px 20px 10px\",\r\n        p: \"5px 20px\",\r\n        borderRadius: \"16px 16px 16px 0px\",\r\n        maxWidth: \"40%\",\r\n        overflowWrap: \"break-word\"\r\n    }\r\n\r\n    const [message, setMessage] = React.useState('');\r\n    const [messageReceived, setMessageReceived] = React.useState([]);\r\n    const [room, setRoom] = React.useState('test room 1')\r\n\r\n    const joinRoom = () => {\r\n        socket.emit('joinRoom', room);\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        if (message === '') {\r\n            return\r\n        }\r\n        socket.emit(\"sendMessage\", { message, room });\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        socket.on(\"receiveMessage\", (data) => {\r\n            setMessageReceived(data);\r\n            setMessage('')\r\n        })\r\n    }, [socket])\r\n\r\n    function ChatBubble(props) {\r\n        return (\r\n            <Grid container justifyContent=\"flex-end\">\r\n                <Typography variant=\"h6\" component=\"div\"\r\n                    sx={userMessageStyle}>\r\n                    {props.message}\r\n                </Typography>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {auth.loggedIn() ? (\r\n                <ForumIcon\r\n                    sx={{\r\n                        position: \"fixed\",\r\n                        zIndex: 50,\r\n                        right: \"3%\",\r\n                        bottom: \"3%\",\r\n                        width: 40,\r\n                        height: 40,\r\n                        \"&:hover\": {\r\n                            cursor: \"pointer\"\r\n                        }\r\n                    }}\r\n                    onClick={handleOpen}\r\n                />\r\n            ) : (<></>)}\r\n            <Backdrop sx={{ color: '#fff', zIndex: 10 }}\r\n                open={open}\r\n            >\r\n                <Modal\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                    aria-labelledby=\"modal-modal-title\"\r\n                    aria-describedby=\"modal-modal-description\"\r\n                    sx={{ height: \"100vh\" }}\r\n                >\r\n                    <Box sx={{\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '50%',\r\n                        transform: 'translate(-50%, -50%)',\r\n                        width: \"70%\",\r\n                        height: \"70%\",\r\n                        bgcolor: 'background.paper',\r\n                        boxShadow: 24,\r\n                        p: 2,\r\n                        borderRadius: 5\r\n                    }}>\r\n                        {/* Medium screen breakpoint chat layout */}\r\n                        <Grid container sx={{ height: \"100%\", display: { xs: \"none\", md: \"flex\" } }}>\r\n                            <Grid item sm={3} sx={{\r\n                                borderRight: \"2px solid #E4E4E4\",\r\n                                p: \"0 16px 0 0\"\r\n                            }}>\r\n                                <Typography variant=\"h6\" component=\"h2\" sx={{ textAlign: \"center\", marginBottom: \"20px\" }}>\r\n                                    Chats\r\n                                </Typography>\r\n                                {/* TODO: Map over chats */}\r\n                                <Stack direction=\"row\" spacing={2} sx={{ borderTop: \"2px solid #E4E4E4\", p: \"5px\", \"&:hover\": { cursor: \"pointer\" } }}>\r\n                                    <Avatar {...stringAvatar('John Doe')} />\r\n                                    <Grid container alignItems=\"center\">\r\n                                        <Typography sx={{ lineHeight: \"1\", fontSize: \"14px\" }}>Last message from John Doe.</Typography>\r\n                                    </Grid>\r\n                                </Stack>\r\n                                <Stack direction=\"row\" spacing={2} sx={{ borderTop: \"2px solid #E4E4E4\", p: \"5px\", \"&:hover\": { cursor: \"pointer\" } }}>\r\n                                    <Avatar {...stringAvatar('Tim Doe')} />\r\n                                    <Grid container alignItems=\"center\">\r\n                                        <Typography sx={{ lineHeight: \"1\", fontSize: \"14px\" }}>Last message from Tim Doe.</Typography>\r\n                                    </Grid>\r\n                                </Stack>\r\n                            </Grid>\r\n                            <Grid item sm={9} sx={{\r\n                                p: \"0 0 0 16px\",\r\n                                height: \"100%\"\r\n                            }}>\r\n                                <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ height: \"100%\", flexWrap: \"nowrap\" }}>\r\n                                    <Grid item sx={{ overflow: \"auto\" }} id=\"messageField\">\r\n                                        {messageReceived.map((data) => <ChatBubble key={data.message} socketID={data.socketID} message={data.message} />)}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <Box component=\"form\"\r\n                                            onSubmit={(event) => {\r\n                                                event.preventDefault();\r\n                                                sendMessage()\r\n                                            }}\r\n                                        >\r\n                                            <Grid container justifyContent=\"center\" gap={1}>\r\n                                                <Grid item xs>\r\n                                                    <TextField fullWidth size='small' placeholder='Your message here...' id=\"textfield\" value={message}\r\n                                                        onChange={(event) => {\r\n                                                            setMessage(event.target.value)\r\n                                                        }}\r\n                                                    />\r\n                                                </Grid>\r\n                                                <Grid item xs={2}>\r\n                                                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: 1 }}>\r\n                                                        <Button variant=\"contained\" endIcon={<SendIcon />} type='submit'>\r\n                                                            Send\r\n                                                        </Button>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Box>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {/* Small screen breakpoint chat layout */}\r\n                        <Grid container sx={{ height: \"100%\", display: { xs: \"flex\", md: \"none\" } }}>\r\n                            <BasicTabs\r\n                                stringAvatar={stringAvatar}\r\n                                friendMessageStyle={friendMessageStyle}\r\n                                userMessageStyle={userMessageStyle}\r\n                            />\r\n                        </Grid>\r\n                    </Box>\r\n                </Modal >\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatBox;","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\mobileChatBox.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js",["110"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/feed\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n ","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js",["111","112","113","114"],"import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { Button } from \"@mui/material\";\nimport auth from \"../../utils/auth.js\";\n\nconst LOGOUT = gql`\n  mutation Logout {\n    logout\n  }\n`;\n\nfunction LogoutForm() {\n  // const [logout, { data }] = useMutation(LOGOUT);\n  // const [isLoggedOut, setIsLoggedOut] = useState(false);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     auth.logout();\n  //     setIsLoggedOut(true);\n  //   }\n  // }, [data]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await auth.logout();\n  };\n\n  // if (isLoggedOut) {\n  //   return <p>You have successfully logged out.</p>;\n  // }\n\n  return (\n    <Button\n      onClick={handleSubmit}\n      variant=\"outlined\"\n      sx={{\n        color: \"white\",\n        borderColor: \"white\",\n        ml: \"20px\",\n        \"&:hover\": {\n          color: \"#DE4567\",\n          borderColor: \"#DE4567\",\n        },\n      }}\n    >\n      Logout\n    </Button>\n  );\n}\n\nexport default LogoutForm;\n","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\Feed.js",["115","116","117","118"],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\AddPet.js",["119","120"],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\queries.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js",["121","122"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport {\n  Grid,\n  Box,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Link,\n  Paper,\n} from \"@mui/material\";\nimport PetsIcon from \"@mui/icons-material/Pets\";\n\nimport Auth from \"../../utils/auth.js\";\nimport Register from \"../Register\";\n\nfunction Login() {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n      console.log(Auth.getProfile());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Show sign up modal use state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Grid\n        item\n        xs={12}\n        sm={8}\n        md={5}\n        component={Paper}\n        elevation={6}\n        square\n        sx={{\n          backgroundColor: \"#F8F5F2\",\n        }}\n      >\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            backgroundColor: \"#F8F5F2\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"#DE4567\" }}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            LOG IN\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleFormSubmit}\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={formState.email}\n              onChange={handleInputChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={formState.password}\n              onChange={handleInputChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, backgroundColor: \"#405C96\" }}\n            >\n              LOG IN\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link onClick={handleOpen} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Grid>\n      <Register handleClose={handleClose} open={open} />\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\Match.js",["123","124"],"import { useQuery } from \"@apollo/client\";\nimport { QUERY_USER, QUERY_OWNER } from \"../../utils/queries\";\nimport { getDistance } from \"geolib\";\nimport auth from \"../../utils/auth.js\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\n\nasync function findLatLon(city) {\n  let latLon = { lat: \"\", lon: \"\" };\n  const geoAPI = `https://api.openweathermap.org/geo/1.0/direct?q=${city}&appid=1560a07c19638ebfb003c32577cdfee1`;\n  let response = await fetch(geoAPI);\n  let data = await response.json();\n  latLon.lat = data[0].lat;\n  latLon.lon = data[0].lon;\n  return latLon;\n}\n\nasync function distanceCalc(userLocation, otherLocation) {\n  let location1 = userLocation.toLowerCase();\n  location1 = location1.replace(\" \", \"_\");\n  let location2 = otherLocation.toLowerCase();\n  location2 = location2.replace(\" \", \"_\");\n  const userLatLon = await findLatLon(location1);\n  const otherLatLon = await findLatLon(location2);\n  const userLat = userLatLon.lat;\n  const userLon = userLatLon.lon;\n  const otherLat = otherLatLon.lat;\n  const otherLon = otherLatLon.lon;\n  let distance = getDistance(\n    { latitude: userLat, longitude: userLon },\n    { latitude: otherLat, longitude: otherLon }\n  );\n  distance = distance / 1609;\n  const finalDistance = Math.round(distance);\n  return finalDistance;\n}\n\nfunction Match(props) {\n  const [distance, setDistance] = useState(0);\n  const { loading: ownerLoading, data: ownerData } = useQuery(QUERY_OWNER, {\n    variables: { ownerId: props.pet.owner },\n  });\n  const owner = ownerData?.owner || {};\n  const ownerLocation = owner.location;\n  console.log(ownerLocation);\n  const userLocation = props.userData.user.location;\n  console.log(userLocation);\n  function calculateDistance() {\n    distanceCalc(ownerLocation, userLocation).then((res) => {\n      setDistance(res);\n    });\n  }\n  return (\n    <>\n      {ownerLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          {calculateDistance()}\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Owner: {owner.first_name} {owner.last_name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {distance} Miles Away\n          </Typography>\n        </>\n      )}\n    </>\n  );\n}\n\n// findLatLon(\"fountain_valley\");\n\nexport default Match;\n","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js",["125","126"],"import { gql, useMutation } from \"@apollo/client\";\n\nexport const REGISTER_USER = gql`\n  mutation register(\n    $first_name: String!\n    $last_name: String!\n    $email: String!\n    $password: String!\n    $location: String!\n  ) {\n    register(\n      first_name: $first_name\n      last_name: $last_name\n      email: $email\n      password: $password\n      location: $location\n    ) {\n      token\n      user {\n        _id\n        first_name\n        last_name\n        email\n        location\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        first_name\n        last_name\n        email\n      }\n    }\n  }\n`;\n\nconst LOGOUT_MUTATION = gql`\n  mutation LogoutMutation {\n    logout\n  }\n`;\n\nexport const ADD_PET = gql`\n  mutation addPet(\n    $name: String!\n    $species: String!\n    $birthday: Date!\n    $pictures: String!\n    $owner: ID\n  ) {\n    addPet(\n      name: $name\n      species: $species\n      birthday: $birthday\n      pictures: $pictures\n      owner: $owner\n    ) {\n      _id\n      name\n      species\n      birthday\n      pictures\n    }\n  }\n`;\n\nexport const CREATE_CHAT = gql`\n  mutation createChat($roomID: String) {\n    createChat (roomID: $roomID) {\n      roomID\n      messages {\n        sender\n        receiver\n        message\n      }\n    }\n  }\n`;\n\nexport const ADD_MESSAGE = gql`\n  mutation addMessage($roomID: String, $message: MessageInput) {\n    addMessage (roomID: $roomID, message: $message) {\n      roomID\n      messages {\n        sender\n        receiver\n        message\n      }\n    }\n  }\n`;\n\nexport function useLogoutMutation() {\n  const [logout, { data, loading, error }] = useMutation(LOGOUT_MUTATION);\n\n  return { logout, data, loading, error };\n}\n\n// uploading photo mutation\n\nconst QUERY_UPLOAD_PHOTO = `\n\tmutation ($formData: FormData!) {\n\t\tuploadProfilePicture(formData: $formData) {\n\t\t\tsuccess\n\t\t}\n\t}\n`;\n\nconst formData = new FormData();\n\n// async function sendMutation() {\n// \tconst response = await fetch(\"/graphql\", {\n// \t\tmethod: \"POST\",\n// \t\theaders: {\n// \t\t\t\"Content-Type\": \"application/json\",\n// \t\t},\n// \t\tbody: JSON.stringify({\n// \t\t\tquery: QUERY_UPLOAD_PHOTO,\n// \t\t\tvariables: {\n// \t\t\t\tformData,\n// \t\t\t},\n// \t\t}),\n// \t});\n// \tconsole.log(response);\n// }\n// sendMutation();\n","C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\sarym\\Desktop\\Bootcamp\\Project-3\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js",["127","128"],"import * as React from 'react';\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport { Modal, Box, Typography, Grid, TextField, Button } from \"@mui/material\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register(props) {\n  const [formState, setFormState] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    location: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.register.token);\n      window.location('/Feed')\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    // Sign up modal\n    <Modal\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        boxShadow: 24,\n        p: 4,\n        \"@media (max-width: 600px)\": {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '70%',\n          bgcolor: 'background.paper',\n          boxShadow: 24,\n          p: 4,\n        }\n      }}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"first_name\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={formState.first_name}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"family-name\"\n                value={formState.last_name}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"location\"\n                label=\"Location\"\n                name=\"location\"\n                autoComplete=\"location\"\n                value={formState.location}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={formState.email}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={formState.password}\n                onChange={handleInputChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, backgroundColor: '#405C96' }}\n          >\n            Sign Up\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default Register;\n",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":69,"column":18,"nodeType":"135","messageId":"136","endLine":69,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":87,"column":8,"nodeType":"139","endLine":87,"endColumn":16,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":28,"column":1,"nodeType":"143","endLine":28,"endColumn":34},{"ruleId":"133","severity":1,"message":"144","line":1,"column":17,"nodeType":"135","messageId":"136","endLine":1,"endColumn":25},{"ruleId":"133","severity":1,"message":"145","line":1,"column":27,"nodeType":"135","messageId":"136","endLine":1,"endColumn":36},{"ruleId":"133","severity":1,"message":"146","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":21},{"ruleId":"133","severity":1,"message":"147","line":7,"column":7,"nodeType":"135","messageId":"136","endLine":7,"endColumn":13},{"ruleId":"133","severity":1,"message":"148","line":6,"column":34,"nodeType":"135","messageId":"136","endLine":6,"endColumn":45},{"ruleId":"133","severity":1,"message":"144","line":8,"column":10,"nodeType":"135","messageId":"136","endLine":8,"endColumn":18},{"ruleId":"133","severity":1,"message":"145","line":8,"column":20,"nodeType":"135","messageId":"136","endLine":8,"endColumn":29},{"ruleId":"133","severity":1,"message":"149","line":28,"column":13,"nodeType":"135","messageId":"136","endLine":28,"endColumn":20},{"ruleId":"133","severity":1,"message":"150","line":17,"column":8,"nodeType":"135","messageId":"136","endLine":17,"endColumn":12},{"ruleId":"133","severity":1,"message":"151","line":39,"column":13,"nodeType":"135","messageId":"136","endLine":39,"endColumn":23},{"ruleId":"133","severity":1,"message":"152","line":26,"column":19,"nodeType":"135","messageId":"136","endLine":26,"endColumn":24},{"ruleId":"133","severity":1,"message":"153","line":26,"column":26,"nodeType":"135","messageId":"136","endLine":26,"endColumn":30},{"ruleId":"133","severity":1,"message":"154","line":2,"column":10,"nodeType":"135","messageId":"136","endLine":2,"endColumn":20},{"ruleId":"133","severity":1,"message":"150","line":4,"column":8,"nodeType":"135","messageId":"136","endLine":4,"endColumn":12},{"ruleId":"133","severity":1,"message":"155","line":108,"column":7,"nodeType":"135","messageId":"136","endLine":108,"endColumn":25},{"ruleId":"133","severity":1,"message":"156","line":116,"column":7,"nodeType":"135","messageId":"136","endLine":116,"endColumn":15},{"ruleId":"133","severity":1,"message":"152","line":18,"column":22,"nodeType":"135","messageId":"136","endLine":18,"endColumn":27},{"ruleId":"133","severity":1,"message":"153","line":18,"column":29,"nodeType":"135","messageId":"136","endLine":18,"endColumn":33},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'setRoom' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["159"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'useEffect' is defined but never used.","'useMutation' is defined but never used.","'LOGOUT' is assigned a value but never used.","'QUERY_OWNER' is defined but never used.","'addChat' is assigned a value but never used.","'auth' is defined but never used.","'addPetForm' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'QUERY_USER' is defined but never used.","'QUERY_UPLOAD_PHOTO' is assigned a value but never used.","'formData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},"Update the dependencies array to be: []",{"range":"162","text":"163"},[2450,2458],"[]"]
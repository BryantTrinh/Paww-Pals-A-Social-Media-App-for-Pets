[{"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js":"1","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js":"2","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js":"3","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js":"4","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js":"5","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js":"6","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js":"7","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js":"8","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js":"9","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js":"10","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js":"11","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js":"12","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js":"13","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js":"14","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js":"15","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js":"16"},{"size":230,"mtime":1675194465513,"results":"17","hashOfConfig":"18"},{"size":1853,"mtime":1675207372169,"results":"19","hashOfConfig":"18"},{"size":4443,"mtime":1675207109752,"results":"20","hashOfConfig":"18"},{"size":42,"mtime":1675194465518,"results":"21","hashOfConfig":"18"},{"size":39,"mtime":1675194465515,"results":"22","hashOfConfig":"18"},{"size":38,"mtime":1675194465514,"results":"23","hashOfConfig":"18"},{"size":525,"mtime":1675194465518,"results":"24","hashOfConfig":"18"},{"size":40,"mtime":1675194465515,"results":"25","hashOfConfig":"18"},{"size":4295,"mtime":1675207109754,"results":"26","hashOfConfig":"18"},{"size":3197,"mtime":1675194465514,"results":"27","hashOfConfig":"18"},{"size":690,"mtime":1675194465514,"results":"28","hashOfConfig":"18"},{"size":959,"mtime":1675207109752,"results":"29","hashOfConfig":"18"},{"size":1450,"mtime":1675207809226,"results":"30","hashOfConfig":"18"},{"size":45,"mtime":1675194465517,"results":"31","hashOfConfig":"18"},{"size":3038,"mtime":1675225136254,"results":"32","hashOfConfig":"18"},{"size":3672,"mtime":1675207109751,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"16qcfwd",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js",[],["73","74"],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js",["75","76"],"import * as React from 'react';\r\nimport {\r\n  ApolloClient,\r\n  InMemoryCache,\r\n  ApolloProvider,\r\n  createHttpLink,\r\n} from \"@apollo/client\";\r\nimport { setContext } from \"@apollo/client/link/context\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Profile from \"./pages/Profile\"\r\nimport ChatBox from \"./components/ChatBox.js\";\r\n\r\nimport { Backdrop } from \"@mui/material\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"/graphql\",\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = localStorage.getItem(\"auth_token\");\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <div>\r\n          {/* <Backdrop sx={{ backdropFilter: \"blur(3px)\" }}\r\n            open={open}\r\n            onClick={handleClose}\r\n          > */}\r\n            <Navbar />\r\n            <ChatBox handleToggle={handleToggle} />\r\n            <Routes>\r\n              <Route path=\"/\" element={<Home />} />\r\n              <Route path=\"/login\" element={<Login />} />\r\n              <Route path=\"/register\" element={<Register />} />\r\n              <Route path=\"/profile\" element={<Profile />} />\r\n            </Routes>\r\n          {/* </Backdrop> */}\r\n        </div>\r\n      </Router>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js",["77"],"import decode from \"jwt-decode\";\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token ? true : false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"auth_token\");\r\n  }\r\n\r\n  login(token) {\r\n    localStorage.setItem(\"auth_token\", token);\r\n    window.location.assign(\"/\");\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"auth_token\");\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n ","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js",["78","79"],"import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { REGISTER_USER } from \"../../utils/mutations\";\r\nimport { Modal, Box, Typography, Grid, TextField, Button } from \"@mui/material\";\r\n\r\nimport Auth from \"../../utils/auth.js\";\r\n\r\nfunction Register(props) {\r\n  const [formState, setFormState] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    location: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [register, { error, data }] = useMutation(REGISTER_USER);\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await register({\r\n        variables: { ...formState },\r\n      });\r\n      console.log(data);\r\n      Auth.login(data.register.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    // Sign up modal\r\n    <Modal\r\n      open={props.open}\r\n      onClose={props.handleClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n    >\r\n      <Box sx={{\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        boxShadow: 24,\r\n        p: 4,\r\n        \"@media (max-width: 600px)\": {\r\n          position: 'absolute',\r\n          top: '50%',\r\n          left: '50%',\r\n          transform: 'translate(-50%, -50%)',\r\n          width: '70%',\r\n          bgcolor: 'background.paper',\r\n          boxShadow: 24,\r\n          p: 4,\r\n        }\r\n      }}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                autoComplete=\"given-name\"\r\n                name=\"first_name\"\r\n                required\r\n                fullWidth\r\n                id=\"firstName\"\r\n                label=\"First Name\"\r\n                autoFocus\r\n                value={formState.first_name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"lastName\"\r\n                label=\"Last Name\"\r\n                name=\"last_name\"\r\n                autoComplete=\"family-name\"\r\n                value={formState.last_name}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                name=\"location\"\r\n                autoComplete=\"location\"\r\n                value={formState.location}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={formState.email}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"new-password\"\r\n                value={formState.password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2, backgroundColor: '#405C96' }}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js",["80","81"],"import * as React from 'react';\r\nimport { useState } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { LOGIN_USER } from \"../../utils/mutations\";\r\nimport { Grid, Box, Avatar, Typography, TextField, Button, Link, Paper } from '@mui/material';\r\nimport PetsIcon from '@mui/icons-material/Pets';\r\n\r\n\r\nimport Auth from \"../../utils/auth.js\";\r\nimport Register from '../Register';\r\n\r\nfunction Login() {\r\n  const [formState, setFormState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setFormState({ ...formState, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await Login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Show sign up modal use state\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <>\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square\r\n        sx={{\r\n          backgroundColor: '#F8F5F2'\r\n        }}>\r\n        <Box\r\n          sx={{\r\n            my: 8,\r\n            mx: 4,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            backgroundColor: '#F8F5F2'\r\n          }}\r\n        >\r\n          <Avatar sx={{ m: 1, bgcolor: '#DE4567' }}>\r\n            <PetsIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            LOG IN\r\n          </Typography>\r\n          <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 1 }}>\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email Address\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              value={formState.email}\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              value={formState.password}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              sx={{ mt: 3, mb: 2, backgroundColor: '#405C96' }}\r\n            >\r\n              LOG IN\r\n            </Button>\r\n            <Grid container>\r\n              <Grid item>\r\n                <Link onClick={handleOpen} variant=\"body2\">\r\n                  {\"Don't have an account? Sign Up\"}\r\n                </Link>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      </Grid>\r\n      <Register handleClose={handleClose} open={open} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js",["82"],"import React, { useState, useEffect } from \"react\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nimport auth from \"../../utils/auth\";\r\n\r\nconst LOGOUT = gql`\r\n\tmutation Logout {\r\n\t\tlogout\r\n\t}\r\n`;\r\n\r\nfunction LogoutForm() {\r\n\tconst [logout, { data }] = useMutation(LOGOUT);\r\n\tconst [isLoggedOut, setIsLoggedOut] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (data) {\r\n\t\t\tauth.logout();\r\n\t\t\tsetIsLoggedOut(true);\r\n\t\t}\r\n\t}, [data]);\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tawait logout();\r\n\t};\r\n\r\n\tif (isLoggedOut) {\r\n\t\treturn <p>You have successfully logged out.</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button variant=\"outlined\"\r\n\t\t\tsx={{\r\n\t\t\t\tcolor: \"white\",\r\n\t\t\t\tborderColor: \"white\",\r\n\t\t\t\tml: \"20px\",\r\n\t\t\t\t\"&:hover\": {\r\n\t\t\t\t\tcolor: \"#DE4567\",\r\n\t\t\t\t\tborderColor: \"#DE4567\",\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t\t\r\n\t\t>\r\n\t\t\tLogout\r\n\t\t</Button>\r\n\t);\r\n}\r\n\r\nexport default LogoutForm;\r\n","C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js",[],"C:\\Users\\jpiro\\coding\\final-project\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js",["83"],"import * as React from 'react';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { Modal, Typography, Box, Grid, TextField, Button } from '@mui/material';\r\n\r\nfunction ChatBox(props) {\r\n    // Show chat box modal use state\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <>\r\n            <ForumIcon\r\n                sx={{\r\n                    position: \"fixed\",\r\n                    zIndex: 50,\r\n                    right: \"3%\",\r\n                    bottom: \"3%\",\r\n                    width: 40,\r\n                    height: 40,\r\n                    \"&:hover\": {\r\n                        cursor: \"pointer\"\r\n                    }\r\n                }}\r\n                onClick={handleOpen}\r\n            />\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    width: \"70%\",\r\n                    height: \"70%\",\r\n                    bgcolor: 'background.paper',\r\n                    boxShadow: 24,\r\n                    p: 2,\r\n                }}>\r\n                    <Grid container sx={{ height: 1 }}>\r\n                        <Grid item sm={3} sx={{\r\n                            borderRight: \"2px solid #E4E4E4\",\r\n                            p: \"0 16px 0 0\"\r\n                        }}>\r\n                            <Typography variant=\"h6\" component=\"h2\" sx={{ textAlign: \"center\" }}>\r\n                                Messages\r\n                            </Typography>\r\n                            {/* Map over messages */}\r\n                        </Grid>\r\n                        <Grid item sm={9} sx={{\r\n                            p: \"0 0 0 16px\"\r\n                        }}>\r\n                            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ height: 1 }}>\r\n                                <Grid item xs={11}>\r\n                                    {/* Map over individual chats */}\r\n                                    <Typography variant=\"h6\" component=\"h2\" sx={{ textAlign: \"center\" }}>\r\n                                        Chat\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={1}>\r\n                                    <Grid container justifyContent=\"center\">\r\n                                        <Grid item xs={11}>\r\n                                            <TextField fullWidth size='small' placeholder='Your message here...'/>\r\n                                        </Grid>\r\n                                        <Grid container xs={1} justifyContent=\"center\" alignItems=\"center\">\r\n                                            <SendIcon sx={{ color: \"#405C96\", \"&:hover\": { cursor: \"pointer\" } }} \r\n                                                onClick={console.log(\"Send\")}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatBox;",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":18,"column":10,"nodeType":"90","messageId":"91","endLine":18,"endColumn":18},{"ruleId":"88","severity":1,"message":"92","line":41,"column":9,"nodeType":"90","messageId":"91","endLine":41,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":28,"column":1,"nodeType":"95","endLine":28,"endColumn":34},{"ruleId":"88","severity":1,"message":"96","line":18,"column":22,"nodeType":"90","messageId":"91","endLine":18,"endColumn":27},{"ruleId":"88","severity":1,"message":"97","line":18,"column":29,"nodeType":"90","messageId":"91","endLine":18,"endColumn":33},{"ruleId":"88","severity":1,"message":"96","line":18,"column":19,"nodeType":"90","messageId":"91","endLine":18,"endColumn":24},{"ruleId":"88","severity":1,"message":"97","line":18,"column":26,"nodeType":"90","messageId":"91","endLine":18,"endColumn":30},{"ruleId":"88","severity":1,"message":"98","line":25,"column":8,"nodeType":"90","messageId":"91","endLine":25,"endColumn":20},{"ruleId":"88","severity":1,"message":"99","line":4,"column":51,"nodeType":"90","messageId":"91","endLine":4,"endColumn":57},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Backdrop' is defined but never used.","Identifier","unusedVar","'handleClose' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js":"1","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js":"2","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js":"3","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js":"4","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js":"5","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js":"6","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js":"7","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\index.js":"8","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js":"9","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js":"10","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js":"11","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js":"12","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\Feed.js":"13","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js":"14","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js":"15","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js":"16","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js":"17","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js":"18","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\mobileChatBox.js":"19","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\index.js":"20","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\Match.js":"21","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\queries.js":"22","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\index.js":"23","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\AddPet.js":"24"},{"size":219,"mtime":1675358476011,"results":"25","hashOfConfig":"26"},{"size":1361,"mtime":1675367686876,"results":"27","hashOfConfig":"26"},{"size":4602,"mtime":1675358476010,"results":"28","hashOfConfig":"26"},{"size":8571,"mtime":1675362334401,"results":"29","hashOfConfig":"26"},{"size":39,"mtime":1675358476016,"results":"30","hashOfConfig":"26"},{"size":37,"mtime":1675105307904,"results":"31","hashOfConfig":"26"},{"size":504,"mtime":1675361934617,"results":"32","hashOfConfig":"26"},{"size":32,"mtime":1675358476013,"results":"33","hashOfConfig":"26"},{"size":42,"mtime":1675358476019,"results":"34","hashOfConfig":"26"},{"size":1054,"mtime":1675361934614,"results":"35","hashOfConfig":"26"},{"size":663,"mtime":1675358476013,"results":"36","hashOfConfig":"26"},{"size":2671,"mtime":1675362334403,"results":"37","hashOfConfig":"26"},{"size":2526,"mtime":1675407331364,"results":"38","hashOfConfig":"26"},{"size":38,"mtime":1675105307904,"results":"39","hashOfConfig":"26"},{"size":3262,"mtime":1675361934613,"results":"40","hashOfConfig":"26"},{"size":1892,"mtime":1675377337359,"results":"41","hashOfConfig":"26"},{"size":41,"mtime":1675105307905,"results":"42","hashOfConfig":"26"},{"size":4093,"mtime":1675367686878,"results":"43","hashOfConfig":"26"},{"size":5320,"mtime":1675362334402,"results":"44","hashOfConfig":"26"},{"size":38,"mtime":1675358476017,"results":"45","hashOfConfig":"26"},{"size":1961,"mtime":1675409559531,"results":"46","hashOfConfig":"26"},{"size":697,"mtime":1675407823155,"results":"47","hashOfConfig":"26"},{"size":34,"mtime":1675367686877,"results":"48","hashOfConfig":"26"},{"size":3980,"mtime":1675378292283,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1obk5xj",{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\index.js",[],["107","108"],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\App.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\Navbar.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\ChatBox.js",["109"],"import * as React from 'react';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Modal, Typography, Box, Grid, TextField, Backdrop, Avatar, Stack, Button } from '@mui/material';\nimport BasicTabs from './mobileChatBox'\n\nimport io from 'socket.io-client'\nconst socket = io.connect('http://localhost:3001');\n\n// Colored avatars with initials\nfunction stringToColor(string) {\n    let hash = 0;\n    let i;\n    for (i = 0; i < string.length; i += 1) {\n        hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    let color = '#';\n    for (i = 0; i < 3; i += 1) {\n        const value = (hash >> (i * 8)) & 0xff;\n        color += `00${value.toString(16)}`.slice(-2);\n    }\n    return color;\n}\n\nfunction stringAvatar(name) {\n    return {\n        sx: {\n            bgcolor: stringToColor(name),\n        },\n        children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n    };\n}\n\nfunction ChatBox() {\n    // Show chat box modal use state\n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => {\n        setOpen(true);\n    };\n    const handleClose = () => setOpen(false);\n\n    const userMessageStyle = {\n        color: \"white\",\n        lineHeight: \"1.5\",\n        backgroundColor: \"primary.main\",\n        m: \"10px 10px 20px 10px\",\n        p: \"5px 20px\",\n        borderRadius: \"16px 16px 0 16px\",\n        maxWidth: \"40%\",\n        overflowWrap: \"break-word\",\n    }\n\n    const friendMessageStyle = {\n        color: \"black\",\n        lineHeight: \"1.5\",\n        backgroundColor: \"grey.400\",\n        m: \"10px 10px 20px 10px\",\n        p: \"5px 20px\",\n        borderRadius: \"16px 16px 16px 0px\",\n        maxWidth: \"40%\",\n        overflowWrap: \"break-word\"\n    }\n\n    const [message, setMessage] = React.useState('');\n    const [messageReceived, setMessageReceived] = React.useState([]);\n\n    const sendMessage = () => {\n        if (message === '') {\n            return\n        }\n        socket.emit(\"sendMessage\", { message });\n    }\n\n    React.useEffect(() => {\n        socket.on(\"receiveMessage\", (data) => {\n            setMessageReceived(data);\n            setMessage('')\n        })\n    }, [socket])\n\n    function ChatBubble(props) {\n        return (\n            <Grid container justifyContent=\"flex-end\">\n                <Typography variant=\"h6\" component=\"div\"\n                    sx={userMessageStyle}>\n                    {props.message}\n                </Typography>\n            </Grid>\n        )\n    }\n\n    return (\n        <>\n            <ForumIcon\n                sx={{\n                    position: \"fixed\",\n                    zIndex: 50,\n                    right: \"3%\",\n                    bottom: \"3%\",\n                    width: 40,\n                    height: 40,\n                    \"&:hover\": {\n                        cursor: \"pointer\"\n                    }\n                }}\n                onClick={handleOpen}\n            />\n            <Backdrop sx={{ color: '#fff', zIndex: 10 }}\n                open={open}\n            >\n                <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"modal-modal-title\"\n                    aria-describedby=\"modal-modal-description\"\n                    sx={{ height: \"100vh\" }}\n                >\n                    <Box sx={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        width: \"70%\",\n                        height: \"70%\",\n                        bgcolor: 'background.paper',\n                        boxShadow: 24,\n                        p: 2,\n                        borderRadius: 5\n                    }}>\n                        {/* Medium screen breakpoint chat layout */}\n                        <Grid container sx={{ height: \"100%\", display: { xs: \"none\", md: \"flex\" } }}>\n                            <Grid item sm={3} sx={{\n                                borderRight: \"2px solid #E4E4E4\",\n                                p: \"0 16px 0 0\"\n                            }}>\n                                <Typography variant=\"h6\" component=\"h2\" sx={{ textAlign: \"center\", marginBottom: \"20px\" }}>\n                                    Chats\n                                </Typography>\n                                {/* TODO: Map over chats */}\n                                <Stack direction=\"row\" spacing={2} sx={{ borderTop: \"2px solid #E4E4E4\", p: \"5px\", \"&:hover\": { cursor: \"pointer\" } }}>\n                                    <Avatar {...stringAvatar('John Doe')} />\n                                    <Grid container alignItems=\"center\">\n                                        <Typography sx={{ lineHeight: \"1\", fontSize: \"14px\" }}>Last message from John Doe.</Typography>\n                                    </Grid>\n                                </Stack>\n                                <Stack direction=\"row\" spacing={2} sx={{ borderTop: \"2px solid #E4E4E4\", p: \"5px\", \"&:hover\": { cursor: \"pointer\" } }}>\n                                    <Avatar {...stringAvatar('Tim Doe')} />\n                                    <Grid container alignItems=\"center\">\n                                        <Typography sx={{ lineHeight: \"1\", fontSize: \"14px\" }}>Last message from Tim Doe.</Typography>\n                                    </Grid>\n                                </Stack>\n                            </Grid>\n                            <Grid item sm={9} sx={{\n                                p: \"0 0 0 16px\",\n                                height: \"100%\"\n                            }}>\n                                <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ height: \"100%\", flexWrap: \"nowrap\" }}>\n                                    <Grid item sx={{ overflow: \"auto\" }} id=\"messageField\">\n                                        {messageReceived.map((data) => <ChatBubble key={data.message} socketID={data.socketID} message={data.message} />)}\n                                    </Grid>\n                                    <Grid item>\n                                        <Box component=\"form\"\n                                            onSubmit={(event) => {\n                                                event.preventDefault();\n                                                sendMessage()\n                                            }}\n                                        >\n                                            <Grid container justifyContent=\"center\" gap={1}>\n                                                <Grid item xs>\n                                                    <TextField fullWidth size='small' placeholder='Your message here...' id=\"textfield\" value={message}\n                                                        onChange={(event) => {\n                                                            setMessage(event.target.value)\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                <Grid item xs={2}>\n                                                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ height: 1 }}>\n                                                        <Button variant=\"contained\" endIcon={<SendIcon />} type='submit'>\n                                                            Send\n                                                        </Button>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Box>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        {/* Small screen breakpoint chat layout */}\n                        <Grid container sx={{ height: \"100%\", display: { xs: \"flex\", md: \"none\" } }}>\n                            <BasicTabs\n                                stringAvatar={stringAvatar}\n                                friendMessageStyle={friendMessageStyle}\n                                userMessageStyle={userMessageStyle}\n                            />\n                        </Grid>\n                    </Box>\n                </Modal >\n            </Backdrop>\n        </>\n    )\n}\n\nexport default ChatBox;","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\auth.js",["110"],"import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return token ? true : false;\n  }\n\n  getToken() {\n    return localStorage.getItem(\"auth_token\");\n  }\n\n  login(token) {\n    localStorage.setItem(\"auth_token\", token);\n    window.location.assign(\"/feed\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"auth_token\");\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n ","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Logout\\Logout.js",["111","112","113","114"],"import React, { useState, useEffect } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\nimport { Button } from \"@mui/material\";\nimport auth from \"../../utils/auth.js\";\n\nconst LOGOUT = gql`\n  mutation Logout {\n    logout\n  }\n`;\n\nfunction LogoutForm() {\n  // const [logout, { data }] = useMutation(LOGOUT);\n  // const [isLoggedOut, setIsLoggedOut] = useState(false);\n\n  // useEffect(() => {\n  //   if (data) {\n  //     auth.logout();\n  //     setIsLoggedOut(true);\n  //   }\n  // }, [data]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    await auth.logout();\n  };\n\n  // if (isLoggedOut) {\n  //   return <p>You have successfully logged out.</p>;\n  // }\n\n  return (\n    <Button\n      onClick={handleSubmit}\n      variant=\"outlined\"\n      sx={{\n        color: \"white\",\n        borderColor: \"white\",\n        ml: \"20px\",\n        \"&:hover\": {\n          color: \"#DE4567\",\n          borderColor: \"#DE4567\",\n        },\n      }}\n    >\n      Logout\n    </Button>\n  );\n}\n\nexport default LogoutForm;\n","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Home\\Home.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Profile\\Profile.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Feed\\Feed.js",["115","116","117"],"import * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport { Grid } from \"@mui/material\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport Match from \"../Matches\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_PETS, QUERY_USER, QUERY_OWNER } from \"../../utils/queries.js\";\nimport { useState, useEffect } from \"react\";\nimport dayjs from \"dayjs\";\n\nexport default function RecipeReviewCard() {\n  const { loading: petsLoading, data: petsData } = useQuery(QUERY_PETS);\n  const petList = petsData?.pets || [];\n  const now = dayjs().format(\"YYYY-MM-DD\");\n  const { loading: userLoading, data: userData } = useQuery(QUERY_USER);\n  if (!userLoading) {\n    console.log(userData);\n  }\n  return (\n    <Grid\n      container\n      justifyContent=\"center\"\n      gap={4}\n      sx={{ marginTop: \"20px\", padding: \"0 20px\" }}\n    >\n      {petsLoading || userLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <>\n          {petList.map((pet) => {\n            return (\n              <Grid item xs={12} sm={6} md={3} key={pet._id}>\n                <Card sx={{ maxWidth: 345 }}>\n                  <CardHeader title={pet.name} />\n                  <CardMedia\n                    component=\"img\"\n                    height=\"194\"\n                    image=\"https://repository-images.githubusercontent.com/260096455/47f1b200-8b2e-11ea-8fa1-ab106189aeb0\"\n                    alt=\"pet profile\"\n                  />\n                  <CardContent>\n                    <Match pet={pet} userData={userData} />\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Age: {dayjs(now).diff(dayjs(pet.birthday), \"year\")}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Species: {pet.species}\n                    </Typography>\n                  </CardContent>\n                  <CardActions disableSpacing>\n                    <IconButton aria-label=\"add to favorites\">\n                      <ChatIcon />\n                    </IconButton>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </>\n      )}\n    </Grid>\n  );\n}\n","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Login\\Login.js",["118","119"],"import * as React from \"react\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN_USER } from \"../../utils/mutations\";\nimport {\n  Grid,\n  Box,\n  Avatar,\n  Typography,\n  TextField,\n  Button,\n  Link,\n  Paper,\n} from \"@mui/material\";\nimport PetsIcon from \"@mui/icons-material/Pets\";\n\nimport Auth from \"../../utils/auth.js\";\nimport Register from \"../Register\";\n\nfunction Login() {\n  const [formState, setFormState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [Login, { error, data }] = useMutation(LOGIN_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await Login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n      console.log(Auth.getProfile());\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // Show sign up modal use state\n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <>\n      <Grid\n        item\n        xs={12}\n        sm={8}\n        md={5}\n        component={Paper}\n        elevation={6}\n        square\n        sx={{\n          backgroundColor: \"#F8F5F2\",\n        }}\n      >\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            backgroundColor: \"#F8F5F2\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"#DE4567\" }}>\n            <PetsIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            LOG IN\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleFormSubmit}\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              value={formState.email}\n              onChange={handleInputChange}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={formState.password}\n              onChange={handleInputChange}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, backgroundColor: \"#405C96\" }}\n            >\n              LOG IN\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link onClick={handleOpen} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Grid>\n      <Register handleClose={handleClose} open={open} />\n    </>\n  );\n}\n\nexport default Login;\n","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\mutations.js",["120","121"],"import { gql, useMutation } from \"@apollo/client\";\n\nexport const REGISTER_USER = gql`\n  mutation register(\n    $first_name: String!\n    $last_name: String!\n    $email: String!\n    $password: String!\n    $location: String!\n  ) {\n    register(\n      first_name: $first_name\n      last_name: $last_name\n      email: $email\n      password: $password\n      location: $location\n    ) {\n      token\n      user {\n        _id\n        first_name\n        last_name\n        email\n        location\n      }\n    }\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        first_name\n        last_name\n        email\n      }\n    }\n  }\n`;\n\nconst LOGOUT_MUTATION = gql`\n  mutation LogoutMutation {\n    logout\n  }\n`;\n\nexport const ADD_PET = gql`\n  mutation addPet(\n    $name: String!\n    $species: String!\n    $birthday: Date!\n    $pictures: String!\n    $owner: ID\n  ) {\n    addPet(\n      name: $name\n      species: $species\n      birthday: $birthday\n      pictures: $pictures\n      owner: $owner\n    ) {\n      _id\n      name\n      species\n      birthday\n      pictures\n    }\n  }\n`;\n\nexport function useLogoutMutation() {\n  const [logout, { data, loading, error }] = useMutation(LOGOUT_MUTATION);\n\n  return { logout, data, loading, error };\n}\n\n// uploading photo mutation\n\nconst QUERY_UPLOAD_PHOTO = `\n\tmutation ($formData: FormData!) {\n\t\tuploadProfilePicture(formData: $formData) {\n\t\t\tsuccess\n\t\t}\n\t}\n`;\n\nconst formData = new FormData();\n\n// async function sendMutation() {\n// \tconst response = await fetch(\"/graphql\", {\n// \t\tmethod: \"POST\",\n// \t\theaders: {\n// \t\t\t\"Content-Type\": \"application/json\",\n// \t\t},\n// \t\tbody: JSON.stringify({\n// \t\t\tquery: QUERY_UPLOAD_PHOTO,\n// \t\t\tvariables: {\n// \t\t\t\tformData,\n// \t\t\t},\n// \t\t}),\n// \t});\n// \tconsole.log(response);\n// }\n// sendMutation();\n","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Register\\Register.js",["122","123"],"import * as React from 'react';\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { REGISTER_USER } from \"../../utils/mutations\";\nimport { Modal, Box, Typography, Grid, TextField, Button } from \"@mui/material\";\n\nimport Auth from \"../../utils/auth.js\";\n\nfunction Register(props) {\n  const [formState, setFormState] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    location: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [register, { error, data }] = useMutation(REGISTER_USER);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await register({\n        variables: { ...formState },\n      });\n      console.log(data);\n      Auth.login(data.register.token);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    // Sign up modal\n    <Modal\n      open={props.open}\n      onClose={props.handleClose}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        boxShadow: 24,\n        p: 4,\n        \"@media (max-width: 600px)\": {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: '70%',\n          bgcolor: 'background.paper',\n          boxShadow: 24,\n          p: 4,\n        }\n      }}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleFormSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"first_name\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={formState.first_name}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"last_name\"\n                autoComplete=\"family-name\"\n                value={formState.last_name}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"location\"\n                label=\"Location\"\n                name=\"location\"\n                autoComplete=\"location\"\n                value={formState.location}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={formState.email}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={formState.password}\n                onChange={handleInputChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2, backgroundColor: '#405C96' }}\n          >\n            Sign Up\n          </Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nexport default Register;\n","C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\components\\mobileChatBox.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\Matches\\Match.js",["124","125","126"],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\utils\\queries.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\index.js",[],"C:\\Users\\bwang\\Desktop\\Bootcamp\\Projects\\Pet-Pals-A-Social-Media-App-for-Pets\\client\\src\\pages\\AddPet\\AddPet.js",["127"],"import * as React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardMedia,\n  CardContent,\n  Button,\n  Grid,\n  TextField,\n  Box,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_PET } from \"../../utils/mutations\";\n\nexport default function RecipeReviewCard() {\n  const [formState, setFormState] = React.useState({\n    pet_name: \"\",\n    species: \"\",\n    birthday: \"\",\n    pictures: \"...\",\n  });\n\n  const [imageFile, setImageFile] = React.useState();\n  const [preview, setPreview] = React.useState();\n  const [addPet] = useMutation(ADD_PET);\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setFormState({ ...formState, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const addPetForm = await addPet({\n        variables: {\n          name: formState.pet_name,\n          species: formState.species,\n          birthday: formState.birthday,\n          pictures: formState.pictures,\n        },\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  React.useEffect(() => {\n    if (!imageFile) {\n      setPreview(\n        \"https://sugarplumnannies.com/wp-content/uploads/2015/11/dog-placeholder.jpg\"\n      );\n      return;\n    }\n\n    const objectUrl = URL.createObjectURL(imageFile);\n    console.log(objectUrl);\n    console.log(typeof objectUrl);\n    setPreview(objectUrl);\n\n    return () => URL.revokeObjectURL(objectUrl);\n  }, [imageFile]);\n\n  const onSelectFile = (event) => {\n    if (!event.target.files || event.target.files.length === 0) {\n      setImageFile(undefined);\n      return;\n    }\n\n    setImageFile(event.target.files[0]);\n  };\n\n  return (\n    <Card sx={{ maxWidth: 500, margin: \"50px auto\" }}>\n      <CardHeader title=\"Add a new pet!\" sx={{ textAlign: \"center\" }} />\n      <CardMedia\n        component=\"img\"\n        height=\"300\"\n        image={preview}\n        alt=\"pet profile\"\n      />\n      <CardContent>\n        <Box\n          component=\"form\"\n          noValidate\n          onSubmit={handleFormSubmit}\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                name=\"pet_name\"\n                required\n                fullWidth\n                id=\"petName\"\n                label=\"Pet Name\"\n                autoFocus\n                value={formState.pet_name}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"species\"\n                label=\"Species\"\n                name=\"species\"\n                value={formState.species}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"birthday\"\n                label=\"Birthday\"\n                name=\"birthday\"\n                value={formState.birthday}\n                onChange={handleInputChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Button\n                variant=\"contained\"\n                component=\"label\"\n                startIcon={<AddIcon />}\n              >\n                Add Image\n                <input\n                  hidden\n                  accept=\"image/*\"\n                  multiple\n                  type=\"file\"\n                  onChange={onSelectFile}\n                />\n              </Button>\n            </Grid>\n          </Grid>\n          <Grid container justifyContent=\"center\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2, backgroundColor: \"#405C96\", right: \"0\" }}\n            >\n              Save\n            </Button>\n          </Grid>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n}\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":79,"column":8,"nodeType":"134","endLine":79,"endColumn":16,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":28,"column":1,"nodeType":"138","endLine":28,"endColumn":34},{"ruleId":"139","severity":1,"message":"140","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"143","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"144","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":21},{"ruleId":"139","severity":1,"message":"145","line":7,"column":7,"nodeType":"141","messageId":"142","endLine":7,"endColumn":13},{"ruleId":"139","severity":1,"message":"146","line":13,"column":34,"nodeType":"141","messageId":"142","endLine":13,"endColumn":45},{"ruleId":"139","severity":1,"message":"140","line":14,"column":10,"nodeType":"141","messageId":"142","endLine":14,"endColumn":18},{"ruleId":"139","severity":1,"message":"143","line":14,"column":20,"nodeType":"141","messageId":"142","endLine":14,"endColumn":29},{"ruleId":"139","severity":1,"message":"147","line":26,"column":19,"nodeType":"141","messageId":"142","endLine":26,"endColumn":24},{"ruleId":"139","severity":1,"message":"148","line":26,"column":26,"nodeType":"141","messageId":"142","endLine":26,"endColumn":30},{"ruleId":"139","severity":1,"message":"149","line":82,"column":7,"nodeType":"141","messageId":"142","endLine":82,"endColumn":25},{"ruleId":"139","severity":1,"message":"150","line":90,"column":7,"nodeType":"141","messageId":"142","endLine":90,"endColumn":15},{"ruleId":"139","severity":1,"message":"147","line":18,"column":22,"nodeType":"141","messageId":"142","endLine":18,"endColumn":27},{"ruleId":"139","severity":1,"message":"148","line":18,"column":29,"nodeType":"141","messageId":"142","endLine":18,"endColumn":33},{"ruleId":"139","severity":1,"message":"151","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":20},{"ruleId":"139","severity":1,"message":"152","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":12},{"ruleId":"139","severity":1,"message":"153","line":38,"column":20,"nodeType":"141","messageId":"142","endLine":38,"endColumn":32},{"ruleId":"139","severity":1,"message":"154","line":35,"column":13,"nodeType":"141","messageId":"142","endLine":35,"endColumn":23},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook React.useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["157"],"import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useMutation' is defined but never used.","'LOGOUT' is assigned a value but never used.","'QUERY_OWNER' is defined but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","'QUERY_UPLOAD_PHOTO' is assigned a value but never used.","'formData' is assigned a value but never used.","'QUERY_USER' is defined but never used.","'auth' is defined but never used.","'ownerLoading' is assigned a value but never used.","'addPetForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: []",{"range":"160","text":"161"},[2172,2180],"[]"]
